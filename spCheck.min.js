var spCheck = {
    VERSION: "0.1.1",
    serviceUrl: 'http://www.drive2.ru/',
    feedUrl: 'http://www.drive2.ru/my/feed/',
    talksUrl: 'http://www.drive2.ru/my/talks/',
    linkToGo: "",
    fctx: "",
    amet: "",
    originalName: "",
    updateAfterLoadTimeout: 0,

    checkFeed: function () {
        if (window.jQuery == undefined)
            return;

        jQuery.support.cors = true;
        jQuery.ajax({
            type: "POST",
            url: spCheck.serviceUrl + "ajax/messenger.cshtml",
            data: spCheck.fctx + "&" + spCheck.amet + "&_=update",
            contentType: "application/x-www-form-urlencoded;charset=UTF-8",
            crossDomain: true,
            success: function (b) {
                var jsonResult = jQuery.parseJSON(b);
                var jsonFeed = jsonResult["feedHtml"];
                var jsonTalk = jsonResult["html"];

                var doc = document.implementation.createHTMLDocument("");
                doc.body.innerHTML = jsonFeed;
                var messagesCount = 0;
                var title = "";

                var feedItems = doc.getElementsByTagName('a');
                if (feedItems.length > 1)
                {
                    messagesCount += parseInt(feedItems[1].innerHTML);
                    title += chrome.i18n.getMessage("feed") + " " + messagesCount;
                    spCheck.linkToGo = spCheck.feedUrl;
                }

                doc.body.innerHTML = jsonTalk;
                var talkItems = doc.getElementsByTagName('a');
                if (talkItems.length > 1)
                {
                    var talksCount = parseInt(talkItems[1].innerHTML);
                    messagesCount += talksCount;

                    if (title != "")
                        title += title + ", ";
                    title += chrome.i18n.getMessage("talks") + " " + talksCount;

                    spCheck.linkToGo = spCheck.talksUrl;
                }

                chrome.browserAction.setTitle({"title": title != "" ? spCheck.originalName + " - " + title : spCheck.originalName });
                chrome.browserAction.setBadgeText({ "text": messagesCount == 0 ? "" : messagesCount.toString() });
            },
            error: function () {
                chrome.browserAction.setBadgeText({ "text": "err" });
            }
        })   
    },

    startCheck: function () {
        if (window.jQuery == undefined)
            return;

        chrome.browserAction.getTitle({}, function(result){ spCheck.originalName = result; });
        spCheck.linkToGo = spCheck.feedUrl;
        chrome.browserAction.onClicked.addListener(spCheck.onClickedHandler);

        jQuery.support.cors = true;
        jQuery.ajax({
            type: "GET",
            url: spCheck.serviceUrl,
            crossDomain: true,
            success: function (b) {
                    var sessionHashes = b.match(/d2.__fctx=\[(.*)\]/);
                    sessionHashes = sessionHashes[1].replace(/"/g,"");
                    sessionHashes = sessionHashes.split(',');

                    spCheck.fctx = sessionHashes[0] + "=" + sessionHashes[1];
                    spCheck.amet = sessionHashes[2] + "=" + sessionHashes[3];

                    spCheck.checkFeed();
                    setInterval(spCheck.checkFeed, 60*1000);
                },
                error: function () {
                    chrome.browserAction.setBadgeText({ "text": "err" });
                }
            })
    },

    updateAfterLoad: function () {
        spCheck.checkFeed();
        clearTimeout(spCheck.updateAfterLoadTimeout);
        spCheck.updateAfterLoadTimeout = 0;
    },

    onClickedHandler: function () {
        var g = spCheck.linkToGo;

        chrome.windows.getAll({
            populate: true
        }, function (q) {
            var r = null;
            for (var o in q) {
                var n = q[o].tabs;
                for (var m in n) {
                    var p = n[m];
                    if (p.url == g) {
                        r = p;
                        break
                    }
                }
            }
            if (r) {
                chrome.tabs.update(r.id, {
                    selected: true
                })
            } else {
                chrome.tabs.create({
                    url: g,
                    selected: true
                })
            }

            spCheck.updateAfterLoadTimeout = setTimeout(spCheck.updateAfterLoad, 10000);            
        })
    }
};
