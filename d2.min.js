var d2 = {
    rootUrl: "http://www.drive2.ru",
    feedUrl: "/my/feed/",
    messagesUrlDefault: "/my/messages/",
    commentsUrl: "/my/comments/",
    ajaxMessagesUrl: "/ajax/messages.cshtml",
    onClickUrl: "",
    fctx: "",
    amet: "",
    originalName: "Drive2",
    updateAfterLoadTimeout: 0,
    readHashInterval: 0,

    checkFeed: function () {
        if (window.jQuery == undefined)
            return;

        jQuery.support.cors = true;
        jQuery.ajax({
            type: "POST",
            url: d2.rootUrl + d2.ajaxMessagesUrl,
            data: d2.fctx + "&" + d2.amet + "&_=update",
            contentType: "application/x-www-form-urlencoded;charset=UTF-8",
            crossDomain: true,
            success: function (b) {

                var jsonResult = jQuery.parseJSON(b);

                var jsonComments = String(jsonResult["commentsUnread"]);
                var jsonFeed = String(jsonResult["feedUnread"]);
                var jsonMessages = String(jsonResult["messagesUnread"]);

                var messagesCount = 0;
                var title = "";

                if (jsonComments.length > 0)
                {
                    var commentsCount = parseInt(jsonComments);
                    if (commentsCount > 0)
                    {
                        messagesCount += commentsCount;
                        title += chrome.i18n.getMessage("comments") + " " + commentsCount;
                        d2.onClickUrl = d2.rootUrl + d2.commentsUrl;
                    }
                }

                if (jsonFeed.length > 0)
                {
                    var feedCount = parseInt(jsonFeed);
                    if (feedCount > 0)
                    {
                        messagesCount += feedCount;

                        if (title != "")
                            title += ", ";

                        title += chrome.i18n.getMessage("feed") + " " + feedCount;
                        d2.onClickUrl = d2.rootUrl + d2.feedUrl;
                    }
                }

                if (jsonMessages.length > 0)
                {
                    var pvtMessagesCount = parseInt(jsonMessages);
                    if (pvtMessagesCount > 0)
                    {
                        messagesCount += pvtMessagesCount;

                        if (title != "")
                            title += ", ";

                        var messagesUrl = jsonResult["messagesLink"];

                        if (!(messagesUrl.length > 0))
                            messagesUrl = messagesUrlDefault;

                        title += chrome.i18n.getMessage("messages") + " " + pvtMessagesCount;
                        d2.onClickUrl = d2.rootUrl + messagesUrl;
                    }
                }

                chrome.browserAction.setTitle({"title": title != "" ? d2.originalName + " - " + title : d2.originalName + " - " + chrome.i18n.getMessage("no_new_messages") });
                chrome.browserAction.setBadgeText({ "text": messagesCount == 0 ? "" : messagesCount.toString() });
            },
            error: function () {
                chrome.browserAction.setBadgeText({ "text": "err" });
            }
        })   
    },

    doCheck: function () {
        if (window.jQuery == undefined)
            return;

        jQuery.support.cors = true;
        jQuery.ajax({
            type: "GET",
            url: d2.rootUrl,
            crossDomain: true,
            success: function (b) {
                    if (d2.readHashInterval != 0)
                        clearInterval(d2.readHashInterval);

                    var sessionHashes = b.match(/d2.__fctx=\[(.*)\]/);
                    sessionHashes = sessionHashes[1].replace(/"/g,"");
                    sessionHashes = sessionHashes.split(',');

                    d2.fctx = sessionHashes[0] + "=" + sessionHashes[1];
                    d2.amet = sessionHashes[2] + "=" + sessionHashes[3];

                    d2.checkFeed();
                    setInterval(d2.checkFeed, localStorage.requestInterval*1000);
                },
                error: function () {
                    chrome.browserAction.setBadgeText({ "text": "err" });
                    if (d2.readHashInterval == 0)
                        d2.readHashInterval = setInterval(d2.doCheck, localStorage.requestInterval*1000);
                }
            })
    },

    startCheck: function () {
        if (window.jQuery == undefined)
            return;

        d2.onClickUrl = d2.rootUrl + d2.feedUrl;
        chrome.browserAction.onClicked.addListener(d2.onClickedHandler);
        d2.doCheck();
    },

    updateAfterLoad: function () {
        d2.checkFeed();
        clearTimeout(d2.updateAfterLoadTimeout);
        d2.updateAfterLoadTimeout = 0;
    },

    onClickedHandler: function () {
        chrome.windows.getAll({
            populate: true
        }, function (q) {
            var r = null;
            for (var o in q) {
                var n = q[o].tabs;
                for (var m in n) {
                    var p = n[m];
                    if (p.url == d2.onClickUrl) {
                        r = p;
                        break
                    }
                }
            }
            if (r) {
                chrome.tabs.update(r.id, {
                    selected: true
                })
            } else {
                chrome.tabs.create({
                    url: d2.onClickUrl,
                    selected: true
                })
            }

            d2.updateAfterLoadTimeout = setTimeout(d2.updateAfterLoad, localStorage.updateAfterOpen*1000);            
        })
    }
};
